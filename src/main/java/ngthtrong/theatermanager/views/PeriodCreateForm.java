/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package ngthtrong.theatermanager.views;

import java.sql.Date;
import java.sql.Time;
import java.util.List;
import javax.swing.table.DefaultTableModel;
import ngthtrong.theatermanager.controller.MovieController;
import ngthtrong.theatermanager.controller.TheaterController;
import ngthtrong.theatermanager.models.Movie;
import ngthtrong.theatermanager.models.Period;
import ngthtrong.theatermanager.models.Theater;

/**
 *
 * @author jhiny
 */
public class PeriodCreateForm extends javax.swing.JFrame {

    /**
     * Creates new form MovieFrom
     */

    private boolean isMovie = false;

    public PeriodCreateForm() {
        initComponents();
    }

    public void FormLoad() {
        this.setVisible(true);
    }

    public void setMovieID(int movie_id) {
        txtMovieID.setText(String.valueOf(movie_id));
        txtMovieID.setEditable(false);
        lbOfTable.setText("List all theaters available:");
        isMovie = true;
    }

    public void setTheaterID(int theater_id) {
        txtTheaterID.setText(String.valueOf(theater_id));
        txtTheaterID.setEnabled(false);
        lbOfTable.setText("List all movies available:");
        isMovie = false;
    }

    public void FormClose() {
        this.setVisible(false);
    }

    public void SetTheaters(List<Theater> theaters) {
        DefaultTableModel model = new DefaultTableModel();
        model.setColumnIdentifiers(new Object[] { "Theater ID", "Theater Name", "Capacity" });
        for (Theater theater : theaters) {
            model.addRow(new Object[] { theater.getTheater_id(), theater.getTheater_name(),
                    theater.getTheater_capactity() });
        }
        tbTheaters.setModel(model);
    }

    public void SetMovies(List<Movie> movies) {
        DefaultTableModel model = new DefaultTableModel();
        model.setColumnIdentifiers(new Object[] { "Movie ID", "Name", "Description" });
        for (Movie movie : movies) {
            model.addRow(new Object[] { movie.getMovie_id(), movie.getMovie_name(), movie.getDescription() });
        }
        tbTheaters.setModel(model);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated
    // <editor-fold defaultstate="collapsed" desc="Generated
    // <editor-fold defaultstate="collapsed" desc="Generated
    // <editor-fold defaultstate="collapsed" desc="Generated
    // <editor-fold defaultstate="collapsed" desc="Generated
    // Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnGrOnShow = new javax.swing.ButtonGroup();
        btnGrCommingSoon = new javax.swing.ButtonGroup();
        jDatePickerUtil1 = new org.jdatepicker.util.JDatePickerUtil();
        jDatePickerUtil2 = new org.jdatepicker.util.JDatePickerUtil();
        jDatePickerUtil3 = new org.jdatepicker.util.JDatePickerUtil();
        jDatePickerUtil4 = new org.jdatepicker.util.JDatePickerUtil();
        jDatePickerUtil5 = new org.jdatepicker.util.JDatePickerUtil();
        btnUserForm = new javax.swing.JButton();
        btnMovieForm = new javax.swing.JButton();
        btnTheaterForm = new javax.swing.JButton();
        lbMovieID = new javax.swing.JLabel();
        txtMovieID = new javax.swing.JTextField();
        btnCreate = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        tbTheaters = new javax.swing.JTable();
        btnBack = new javax.swing.JButton();
        lbOfTable = new javax.swing.JLabel();
        lbTheater = new javax.swing.JLabel();
        txtTheaterID = new javax.swing.JTextField();
        lbTime = new javax.swing.JLabel();
        txtTime = new javax.swing.JComboBox<>();
        lbDate = new javax.swing.JLabel();
        txtDate = new com.toedter.calendar.JDateChooser();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        btnUserForm.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnUserForm.setText("User");

        btnMovieForm.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnMovieForm.setText("Movie");

        btnTheaterForm.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnTheaterForm.setText("Theater");

        lbMovieID.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        lbMovieID.setText("Movie ID");

        txtMovieID.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtMovieIDKeyReleased(evt);
            }

            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtMovieIDKeyTyped(evt);
            }
        });

        btnCreate.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnCreate.setText("Create Period");
        btnCreate.setEnabled(false);
        btnCreate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCreateActionPerformed(evt);
            }
        });

        tbTheaters.setModel(new javax.swing.table.DefaultTableModel(
                new Object[][] {
                        { null, null, null },
                        { null, null, null },
                        { null, null, null },
                        { null, null, null }
                },
                new String[] {
                        "Theater ID", "Theater Name", "Capacity"
                }) {
            Class[] types = new Class[] {
                    java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean[] {
                    false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types[columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit[columnIndex];
            }
        });
        jScrollPane2.setViewportView(tbTheaters);
        if (tbTheaters.getColumnModel().getColumnCount() > 0) {
            tbTheaters.getColumnModel().getColumn(1).setResizable(false);
            tbTheaters.getColumnModel().getColumn(2).setResizable(false);
        }

        btnBack.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnBack.setText("Back to Add Periods");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        lbOfTable.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        lbOfTable.setText("List all theaters available:");

        lbTheater.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        lbTheater.setText("Theater ID");

        txtTheaterID.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtTheaterIDKeyReleased(evt);
            }

            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtTheaterIDKeyTyped(evt);
            }
        });

        lbTime.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        lbTime.setText("Time");

        txtTime.setModel(new javax.swing.DefaultComboBoxModel<>(
                new String[] { "10:00", "11:30", "13:00", "14:30", "15:00", "16:30", "18:00", "20:00", "22:00" }));

        lbDate.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        lbDate.setText("Date");

        txtDate.setDateFormatString("dd-MM-yyyy");
        txtDate.addInputMethodListener(new java.awt.event.InputMethodListener() {
            public void caretPositionChanged(java.awt.event.InputMethodEvent evt) {
            }

            public void inputMethodTextChanged(java.awt.event.InputMethodEvent evt) {
                txtDateInputMethodTextChanged(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(layout.createSequentialGroup()
                                                .addGap(20, 20, 20)
                                                .addGroup(layout
                                                        .createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING,
                                                                false)
                                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout
                                                                .createSequentialGroup()
                                                                .addComponent(btnBack)
                                                                .addPreferredGap(
                                                                        javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                                .addComponent(btnCreate)
                                                                .addGap(23, 23, 23))
                                                        .addGroup(layout.createSequentialGroup()
                                                                .addGroup(layout.createParallelGroup(
                                                                        javax.swing.GroupLayout.Alignment.LEADING)
                                                                        .addGroup(layout.createSequentialGroup()
                                                                                .addComponent(btnUserForm)
                                                                                .addGap(21, 21, 21)
                                                                                .addComponent(btnMovieForm)
                                                                                .addGap(18, 18, 18)
                                                                                .addComponent(btnTheaterForm))
                                                                        .addComponent(lbTheater)
                                                                        .addComponent(lbTime)
                                                                        .addComponent(lbDate))
                                                                .addPreferredGap(
                                                                        javax.swing.LayoutStyle.ComponentPlacement.RELATED,
                                                                        javax.swing.GroupLayout.DEFAULT_SIZE,
                                                                        Short.MAX_VALUE))))
                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout
                                                .createSequentialGroup()
                                                .addContainerGap()
                                                .addGroup(layout
                                                        .createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                        .addComponent(txtTheaterID,
                                                                javax.swing.GroupLayout.PREFERRED_SIZE, 146,
                                                                javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addGroup(layout.createSequentialGroup()
                                                                .addComponent(lbMovieID)
                                                                .addGap(103, 103, 103)
                                                                .addComponent(txtMovieID,
                                                                        javax.swing.GroupLayout.PREFERRED_SIZE, 146,
                                                                        javax.swing.GroupLayout.PREFERRED_SIZE))
                                                        .addComponent(txtTime, javax.swing.GroupLayout.PREFERRED_SIZE,
                                                                146, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addComponent(txtDate, javax.swing.GroupLayout.PREFERRED_SIZE,
                                                                146, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(layout.createSequentialGroup()
                                                .addComponent(lbOfTable, javax.swing.GroupLayout.DEFAULT_SIZE, 456,
                                                        Short.MAX_VALUE)
                                                .addContainerGap())
                                        .addComponent(jScrollPane2))));
        layout.setVerticalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(btnUserForm, javax.swing.GroupLayout.PREFERRED_SIZE, 45,
                                                javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(btnMovieForm, javax.swing.GroupLayout.PREFERRED_SIZE, 45,
                                                javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(btnTheaterForm, javax.swing.GroupLayout.PREFERRED_SIZE, 45,
                                                javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(lbOfTable, javax.swing.GroupLayout.PREFERRED_SIZE, 45,
                                                javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 395,
                                                Short.MAX_VALUE)
                                        .addGroup(layout.createSequentialGroup()
                                                .addGap(30, 30, 30)
                                                .addGroup(layout
                                                        .createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                                                        .addComponent(lbMovieID)
                                                        .addComponent(txtMovieID,
                                                                javax.swing.GroupLayout.PREFERRED_SIZE,
                                                                javax.swing.GroupLayout.DEFAULT_SIZE,
                                                                javax.swing.GroupLayout.PREFERRED_SIZE))
                                                .addGap(18, 18, 18)
                                                .addGroup(layout
                                                        .createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                                                        .addComponent(lbTheater)
                                                        .addComponent(txtTheaterID,
                                                                javax.swing.GroupLayout.PREFERRED_SIZE,
                                                                javax.swing.GroupLayout.DEFAULT_SIZE,
                                                                javax.swing.GroupLayout.PREFERRED_SIZE))
                                                .addGap(18, 18, 18)
                                                .addGroup(layout
                                                        .createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                                                        .addComponent(lbTime)
                                                        .addComponent(txtTime, javax.swing.GroupLayout.PREFERRED_SIZE,
                                                                javax.swing.GroupLayout.DEFAULT_SIZE,
                                                                javax.swing.GroupLayout.PREFERRED_SIZE))
                                                .addGap(18, 18, 18)
                                                .addGroup(layout
                                                        .createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                                                        .addComponent(txtDate, javax.swing.GroupLayout.PREFERRED_SIZE,
                                                                javax.swing.GroupLayout.DEFAULT_SIZE,
                                                                javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addComponent(lbDate))
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED,
                                                        134, Short.MAX_VALUE)
                                                .addGroup(layout
                                                        .createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                        .addComponent(btnCreate, javax.swing.GroupLayout.PREFERRED_SIZE,
                                                                45, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addComponent(btnBack, javax.swing.GroupLayout.PREFERRED_SIZE,
                                                                45, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                .addGap(28, 28, 28)))));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtDateInputMethodTextChanged(java.awt.event.InputMethodEvent evt) {// GEN-FIRST:event_txtDateInputMethodTextChanged
        // TODO add your handling code here:
        if (txtMovieID.getText().isEmpty()) {
            btnCreate.setEnabled(false);
        } else {
            if (tbTheaters.getRowCount() > 0) {
                btnCreate.setEnabled(true);
            }
        }
    }// GEN-LAST:event_txtDateInputMethodTextChanged

    private void txtTheaterIDKeyTyped(java.awt.event.KeyEvent evt) {// GEN-FIRST:event_txtTheaterIDKeyTyped
        char c = evt.getKeyChar();
        if (!Character.isDigit(c)) {
            evt.consume();
        }
    }// GEN-LAST:event_txtTheaterIDKeyTyped

    private void txtMovieIDKeyTyped(java.awt.event.KeyEvent evt) {// GEN-FIRST:event_txtMovieIDKeyTyped
        char c = evt.getKeyChar();
        if (!Character.isDigit(c)) {
            evt.consume();
        }
    }// GEN-LAST:event_txtMovieIDKeyTyped

    private void txtTheaterIDKeyReleased(java.awt.event.KeyEvent evt) {// GEN-FIRST:event_txtTheaterIDKeyReleased
        if (txtTheaterID.getText().isEmpty()) {
            btnCreate.setEnabled(false);
        } else {
            if (tbTheaters.getRowCount() > 0) {
                btnCreate.setEnabled(true);
            }
        }
    }// GEN-LAST:event_txtTheaterIDKeyReleased

    private void txtMovieIDKeyReleased(java.awt.event.KeyEvent evt) {// GEN-FIRST:event_txtMovieIDKeyReleased
        if (txtMovieID.getText().isEmpty()) {
            btnCreate.setEnabled(false);
        } else {
            if (tbTheaters.getRowCount() > 0) {
                btnCreate.setEnabled(true);
            }
        }
    }// GEN-LAST:event_txtMovieIDKeyReleased

    private void btnCreateActionPerformed(java.awt.event.ActionEvent evt) {
        if(txtDate.getDate() == null){
            javax.swing.JOptionPane.showMessageDialog(this, "Please choose a date");

        }else{
            
            Period period = new Period();
            period.setMovie_id(Integer.parseInt(txtMovieID.getText()));
            period.setTheater_id(Integer.parseInt(txtTheaterID.getText()));
            period.setPeriod_time(Time.valueOf(txtTime.getSelectedItem().toString() + ":00"));
            period.setPeriod_date(new Date(txtDate.getDate().getTime()));
            period.setPeriod_size(0);
            if (isMovie) {
                
                MovieController movieController = new MovieController();
                movieController.setMovieCreatePeriodForm(this);
                movieController.createPeriod(period);
            } else {
                TheaterController theaterController = new TheaterController();
                theaterController.setPeriodCreateForm(this);
                theaterController.createPeriod(period);
            }
        }

    }// GEN-LAST:event_btnCreateActionPerformed

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_btnBackActionPerformed
        if (isMovie) {
            MovieController movieController = new MovieController();
            movieController.setMovieCreatePeriodForm(this);
            movieController.openMovieDetail(Integer.parseInt(txtMovieID.getText()));
        } else {
            TheaterController theaterController = new TheaterController();
            theaterController.setPeriodCreateForm(this);
            theaterController.showTheaterDetailForm(Integer.parseInt(txtTheaterID.getText()));

        }
        this.FormClose();
    }// GEN-LAST:event_btnBackActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        // <editor-fold defaultstate="collapsed" desc=" Look and feel setting code
        // (optional) ">
        /*
         * If Nimbus (introduced in Java SE 6) is not available, stay with the default
         * look and feel.
         * For details see
         * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PeriodCreateForm.class.getName()).log(java.util.logging.Level.SEVERE,
                    null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PeriodCreateForm.class.getName()).log(java.util.logging.Level.SEVERE,
                    null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PeriodCreateForm.class.getName()).log(java.util.logging.Level.SEVERE,
                    null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PeriodCreateForm.class.getName()).log(java.util.logging.Level.SEVERE,
                    null, ex);
        }
        // </editor-fold>
        // </editor-fold>
        // </editor-fold>
        // </editor-fold>
        // </editor-fold>
        // </editor-fold>
        // </editor-fold>
        // </editor-fold>
        // </editor-fold>
        // </editor-fold>
        // </editor-fold>
        // </editor-fold>
        // </editor-fold>
        // </editor-fold>
        // </editor-fold>
        // </editor-fold>
        // </editor-fold>
        // </editor-fold>
        // </editor-fold>
        // </editor-fold>
        // </editor-fold>
        // </editor-fold>
        // </editor-fold>
        // </editor-fold>
        // </editor-fold>
        // </editor-fold>
        // </editor-fold>
        // </editor-fold>
        // </editor-fold>
        // </editor-fold>
        // </editor-fold>
        // </editor-fold>
        // </editor-fold>
        // </editor-fold>
        // </editor-fold>
        // </editor-fold>
        // </editor-fold>
        // </editor-fold>
        // </editor-fold>
        // </editor-fold>
        // </editor-fold>
        // </editor-fold>
        // </editor-fold>
        // </editor-fold>
        // </editor-fold>
        // </editor-fold>
        // </editor-fold>
        // </editor-fold>
        // </editor-fold>
        // </editor-fold>
        // </editor-fold>
        // </editor-fold>
        // </editor-fold>
        // </editor-fold>
        // </editor-fold>
        // </editor-fold>
        // </editor-fold>
        // </editor-fold>
        // </editor-fold>
        // </editor-fold>
        // </editor-fold>
        // </editor-fold>
        // </editor-fold>
        // </editor-fold>
        // </editor-fold>
        // </editor-fold>
        // </editor-fold>
        // </editor-fold>
        // </editor-fold>
        // </editor-fold>
        // </editor-fold>
        // </editor-fold>
        // </editor-fold>
        // </editor-fold>
        // </editor-fold>
        // </editor-fold>
        // </editor-fold>
        // </editor-fold>
        // </editor-fold>
        // </editor-fold>
        // </editor-fold>
        // </editor-fold>
        // </editor-fold>
        // </editor-fold>
        // </editor-fold>
        // </editor-fold>
        // </editor-fold>
        // </editor-fold>
        // </editor-fold>
        // </editor-fold>
        // </editor-fold>
        // </editor-fold>
        // </editor-fold>
        // </editor-fold>
        // </editor-fold>
        // </editor-fold>
        // </editor-fold>
        // </editor-fold>
        // </editor-fold>
        // </editor-fold>
        // </editor-fold>
        // </editor-fold>
        // </editor-fold>
        // </editor-fold>
        // </editor-fold>
        // </editor-fold>
        // </editor-fold>
        // </editor-fold>
        // </editor-fold>
        // </editor-fold>
        // </editor-fold>
        // </editor-fold>
        // </editor-fold>
        // </editor-fold>
        // </editor-fold>
        // </editor-fold>
        // </editor-fold>
        // </editor-fold>
        // </editor-fold>
        // </editor-fold>
        // </editor-fold>
        // </editor-fold>
        // </editor-fold>
        // </editor-fold>
        // </editor-fold>
        // </editor-fold>
        // </editor-fold>
        // </editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new PeriodCreateForm().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnCreate;
    private javax.swing.ButtonGroup btnGrCommingSoon;
    private javax.swing.ButtonGroup btnGrOnShow;
    private javax.swing.JButton btnMovieForm;
    private javax.swing.JButton btnTheaterForm;
    private javax.swing.JButton btnUserForm;
    private org.jdatepicker.util.JDatePickerUtil jDatePickerUtil1;
    private org.jdatepicker.util.JDatePickerUtil jDatePickerUtil2;
    private org.jdatepicker.util.JDatePickerUtil jDatePickerUtil3;
    private org.jdatepicker.util.JDatePickerUtil jDatePickerUtil4;
    private org.jdatepicker.util.JDatePickerUtil jDatePickerUtil5;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lbDate;
    private javax.swing.JLabel lbMovieID;
    private javax.swing.JLabel lbOfTable;
    private javax.swing.JLabel lbTheater;
    private javax.swing.JLabel lbTime;
    private javax.swing.JTable tbTheaters;
    private com.toedter.calendar.JDateChooser txtDate;
    private javax.swing.JTextField txtMovieID;
    private javax.swing.JTextField txtTheaterID;
    private javax.swing.JComboBox<String> txtTime;
    // End of variables declaration//GEN-END:variables
}
