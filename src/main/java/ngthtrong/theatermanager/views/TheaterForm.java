/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package ngthtrong.theatermanager.views;

import java.awt.Color;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import ngthtrong.theatermanager.controller.HomePageController;
import ngthtrong.theatermanager.controller.MovieController;
import ngthtrong.theatermanager.controller.TheaterController;
import ngthtrong.theatermanager.models.Movie;
import ngthtrong.theatermanager.models.Theater;

/**
 *
 * @author jhiny
 */
public class TheaterForm extends javax.swing.JFrame {

    /**
     * Creates new form MovieFrom
     */
    private TheaterController theaterController;

    public void setTheaterController(TheaterController theaterController) {
        this.theaterController = theaterController;
    }

    public TheaterForm() {
        initComponents();
        this.setLocationRelativeTo(null);
        this.setSize(1000, 630);
//        this.
        getContentPane().setBackground(Color.getHSBColor(0.2f, 0.05f, 0.95f));
    }

    public TheaterForm(TheaterController theaterController) {
        initComponents();
        this.theaterController = theaterController;
        theaterController.setTheaterForm(this);
        this.setLocationRelativeTo(null);
        this.setSize(1000, 630);
        getContentPane().setBackground(Color.getHSBColor(0.2f, 0.05f, 0.95f));

    }

    public void FormLoad() {
        this.setVisible(true);
        CleanTxt();
    }

    public void CleanTxt() {
        txtTheaterID.setText("");
        txtTheaterName.setText("");
        txtCapacity.setText("");
        txtTheaterID.requestFocus();
        btnSave.setEnabled(false);
        btnSave.setEnabled(false);
        btnAdd.setEnabled(true);
        txtTheaterID.setEnabled(true);
        btnDeleteByID.setEnabled(false);
        btnGetDetail.setEnabled(false);
        btnSortByCapacity.setSelected(false);
        btnSortByName.setSelected(false);

    }

    public void setTheaterTables(List<Theater> theater) {
        DefaultTableModel model = new DefaultTableModel();
        model.addColumn("Theater ID");
        model.addColumn("Name");
        model.addColumn("Capacity");
        model.addColumn("Is Using");
        //set column "is using" as boolean view

        for (Theater t : theater) {
            model.addRow(new Object[]{
                String.valueOf(t.getTheater_id()),
                t.getTheater_name(),
                String.valueOf(t.getTheater_capacity()),
                t.isIsUsing()});
        }
        tbAllTheater.setModel(model);
        tbAllTheater.getColumnModel().getColumn(3).setCellRenderer(tbAllTheater.getDefaultRenderer(Boolean.class));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated
    // <editor-fold defaultstate="collapsed" desc="Generated
    // <editor-fold defaultstate="collapsed" desc="Generated
    // <editor-fold defaultstate="collapsed" desc="Generated
    // <editor-fold defaultstate="collapsed" desc="Generated
    // <editor-fold defaultstate="collapsed" desc="Generated
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnTheaterForm = new javax.swing.JButton();
        lbMovieID = new javax.swing.JLabel();
        txtTheaterID = new javax.swing.JTextField();
        lbMovieID1 = new javax.swing.JLabel();
        txtTheaterName = new javax.swing.JTextField();
        btnAdd = new javax.swing.JButton();
        btnSave = new javax.swing.JButton();
        btnDeleteByID = new javax.swing.JButton();
        btnGetDetail = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        tbAllTheater = new javax.swing.JTable();
        btnCancel = new javax.swing.JButton();
        lbMovieName = new javax.swing.JLabel();
        lbMovieID2 = new javax.swing.JLabel();
        txtCapacity = new javax.swing.JTextField();
        btnSortByCapacity = new javax.swing.JToggleButton();
        btnSortByName = new javax.swing.JToggleButton();
        btnHome = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(255, 255, 204));

        btnTheaterForm.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnTheaterForm.setText("Theater");
        btnTheaterForm.setEnabled(false);
        btnTheaterForm.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTheaterFormActionPerformed(evt);
            }
        });

        lbMovieID.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        lbMovieID.setText("Theater ID:");

        txtTheaterID.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtTheaterIDKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtTheaterIDKeyTyped(evt);
            }
        });

        lbMovieID1.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        lbMovieID1.setText("Name:");

        txtTheaterName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtTheaterNameActionPerformed(evt);
            }
        });
        txtTheaterName.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtTheaterNameKeyTyped(evt);
            }
        });

        btnAdd.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnAdd.setText("Add");
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });

        btnSave.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnSave.setText("Save");
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });

        btnDeleteByID.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnDeleteByID.setText("Delete by ID");
        btnDeleteByID.setEnabled(false);
        btnDeleteByID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteByIDActionPerformed(evt);
            }
        });

        btnGetDetail.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnGetDetail.setText("Get Detail by ID");
        btnGetDetail.setEnabled(false);
        btnGetDetail.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGetDetailActionPerformed(evt);
            }
        });

        tbAllTheater.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Theater ID", "Name", "Capacity", "Is Using"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Boolean.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(tbAllTheater);
        if (tbAllTheater.getColumnModel().getColumnCount() > 0) {
            tbAllTheater.getColumnModel().getColumn(0).setResizable(false);
            tbAllTheater.getColumnModel().getColumn(2).setResizable(false);
            tbAllTheater.getColumnModel().getColumn(3).setResizable(false);
        }

        btnCancel.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnCancel.setText("Cancel");
        btnCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelActionPerformed(evt);
            }
        });

        lbMovieName.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        lbMovieName.setText("List of theaters:");

        lbMovieID2.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        lbMovieID2.setText("Capactity:");

        txtCapacity.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCapacityActionPerformed(evt);
            }
        });
        txtCapacity.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtCapacityKeyTyped(evt);
            }
        });

        btnSortByCapacity.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnSortByCapacity.setText("Sort by Capactity");
        btnSortByCapacity.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSortByCapacityActionPerformed(evt);
            }
        });

        btnSortByName.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnSortByName.setText("Sort by Name");
        btnSortByName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSortByNameActionPerformed(evt);
            }
        });

        btnHome.setBackground(new java.awt.Color(204, 0, 0));
        btnHome.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        btnHome.setForeground(new java.awt.Color(255, 255, 255));
        btnHome.setText("Home");
        btnHome.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHomeActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lbMovieID1)
                                .addGap(18, 18, 18)
                                .addComponent(txtTheaterName, javax.swing.GroupLayout.PREFERRED_SIZE, 187, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                    .addComponent(lbMovieID2)
                                    .addGap(50, 50, 50)
                                    .addComponent(txtCapacity, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(lbMovieID, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(40, 40, 40)
                                    .addComponent(txtTheaterID, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(14, 14, 14)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnCancel, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnSave, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(36, 36, 36)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnDeleteByID, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnGetDetail)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(25, 25, 25)
                        .addComponent(btnHome)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnTheaterForm)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(63, 63, 63)
                        .addComponent(btnSortByCapacity)
                        .addGap(18, 18, 18)
                        .addComponent(btnSortByName)
                        .addContainerGap(349, Short.MAX_VALUE))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 708, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lbMovieName, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addContainerGap())))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btnHome, javax.swing.GroupLayout.DEFAULT_SIZE, 45, Short.MAX_VALUE)
                    .addComponent(btnTheaterForm, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(21, 21, 21)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(4, 4, 4)
                        .addComponent(jScrollPane2)
                        .addGap(12, 12, 12)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                            .addComponent(btnSortByName, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnSortByCapacity, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(19, 19, 19))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                            .addComponent(txtTheaterID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lbMovieID))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtTheaterName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lbMovieID1))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lbMovieID2)
                            .addComponent(txtCapacity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnDeleteByID, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(12, 12, 12)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnSave, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnGetDetail, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(12, 12, 12)
                        .addComponent(btnCancel, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(17, 17, 17))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(lbMovieName, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(547, 547, 547))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtTheaterNameKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtTheaterNameKeyTyped
        // TODO add your handling code here:
        if (txtTheaterName.getText().length() >= 100) {
            evt.consume();
        }


    }//GEN-LAST:event_txtTheaterNameKeyTyped

    private void btnHomeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHomeActionPerformed
        // TODO add your handling code here:
        HomePageController backHome = new HomePageController();
        backHome.loadHomePage();
        this.dispose();
    }//GEN-LAST:event_btnHomeActionPerformed

    private void btnSortByNameActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_btnSortByNameActionPerformed
        if (btnSortByName.isSelected()) {
            theaterController.handleSortByName(true);
        } else {
            theaterController.handleSortByName(false);
        }
    }// GEN-LAST:event_btnSortByNameActionPerformed

    private void txtCapacityActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_txtCapacityActionPerformed
        // TODO add your handling code here:
    }// GEN-LAST:event_txtCapacityActionPerformed

    private void txtTheaterNameActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_txtTheaterNameActionPerformed
        // TODO add your handling code here:
    }// GEN-LAST:event_txtTheaterNameActionPerformed

    private void txtTheaterIDKeyTyped(java.awt.event.KeyEvent evt) {// GEN-FIRST:event_txtTheaterIDKeyTyped
        char c = evt.getKeyChar();
        if (!Character.isDigit(c)) {
            evt.consume();
        }
    }// GEN-LAST:event_txtTheaterIDKeyTyped

    private void txtCapacityKeyTyped(java.awt.event.KeyEvent evt) {// GEN-FIRST:event_txtCapacityKeyTyped
        char c = evt.getKeyChar();
        if (!Character.isDigit(c)) {
            evt.consume();
        }
    }// GEN-LAST:event_txtCapacityKeyTyped

    private void btnSortByCapacityActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_btnSortByCapacityActionPerformed
        if (btnSortByCapacity.isSelected()) {
            // btnSortByCapacity.setText("Sort by ID");
            theaterController.handleSortByCapacity(true);
        } else {
            // btnSortByCapacity.setText("Sort by Capacity");
            theaterController.handleSortByCapacity(false);

        }
    }// GEN-LAST:event_btnSortByCapacityActionPerformed

    private void btnTheaterFormActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_btnTheaterFormActionPerformed
        // TODO add your handling code here:
    }// GEN-LAST:event_btnTheaterFormActionPerformed

    private void txtTheaterIDKeyReleased(java.awt.event.KeyEvent evt) {// GEN-FIRST:event_txtTheaterIDKeyReleased
        if (txtTheaterID.getText().equals("")) {
            btnDeleteByID.setEnabled(false);
            btnGetDetail.setEnabled(false);
        } else {
            btnDeleteByID.setEnabled(true);
            btnGetDetail.setEnabled(true);
        }
    }// GEN-LAST:event_txtTheaterIDKeyReleased

    private void btnCancelActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_btnCancelActionPerformed
        // TODO add your handling code here:
        CleanTxt();
    }// GEN-LAST:event_btnCancelActionPerformed

    private void btnGetDetailActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_btnGetDetailActionPerformed
        theaterController.setTheaterForm(this);
        int id = Integer.valueOf(txtTheaterID.getText());
        theaterController.showTheaterDetailForm(id);
    }// GEN-LAST:event_btnGetDetailActionPerformed

    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_btnAddActionPerformed
        // TODO add your handling code here:
        btnSave.setEnabled(true);
        txtTheaterID.setText("");
        txtTheaterID.setEnabled(false);
        txtTheaterName.requestFocus();
        btnAdd.setEnabled(false);
        btnDeleteByID.setEnabled(false);
        btnGetDetail.setEnabled(false);
    }// GEN-LAST:event_btnAddActionPerformed

    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_btnSaveActionPerformed
        // TODO add your handling code here:
        if (txtTheaterName.getText().equals("") || txtCapacity.getText().equals("")) {
            String[] options = {"Ok"};
            JOptionPane.showOptionDialog(null, "Please fill all the field", "Error", JOptionPane.DEFAULT_OPTION,
                    JOptionPane.WARNING_MESSAGE, null, options, options[0]);
        } else {
            Theater theater = new Theater();
            theater.setTheater_name(txtTheaterName.getText());
            theater.setTheater_capacity(Integer.valueOf(txtCapacity.getText()));
            theater.setIsUsing(false);
            TheaterController control = new TheaterController();
            control.setTheaterForm(this);
            control.addTheater(theater);
        }
        CleanTxt();

    }// GEN-LAST:event_btnSaveActionPerformed

    private void btnDeleteByIDActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_btnDeleteByIDActionPerformed
        // TODO add your handling code here:
        String[] options = {"Cancel", "Delete"};
        var selected = JOptionPane.showOptionDialog(this,
                "You sure to delete this movie with id = " + txtTheaterID.getText() + "!",
                "Status add new user", JOptionPane.DEFAULT_OPTION, JOptionPane.INFORMATION_MESSAGE, null, options,
                options[0]);
        if (selected == 0) {
            return;
        }
        int id = Integer.valueOf(txtTheaterID.getText());

        theaterController.DeleteTheaterByID(id);
        CleanTxt();

    }// GEN-LAST:event_btnDeleteByIDActionPerformed

    private int GetIndexRowByValue(int value) {
        DefaultTableModel model = (DefaultTableModel) tbAllTheater.getModel();
        for (int i = 0; i < model.getRowCount(); i++) {
            if (model.getValueAt(i, 0).equals(value)) {
                return i;
            }
        }
        return -1;
    }

    /**
     * @param args the command line arguments
     */
//    public static void main(String args[]) {
//        /* Set the Nimbus look and feel */
//        // <editor-fold defaultstate="collapsed" desc=" Look and feel setting code
//        // (optional) ">
//        /*
//         * If Nimbus (introduced in Java SE 6) is not available, stay with the default
//         * look and feel.
//         * For details see
//         * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
//         */
//        try {
//            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
//                if ("Nimbus".equals(info.getName())) {
//                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
//                    break;
//                }
//            }
//        } catch (ClassNotFoundException ex) {
//            java.util.logging.Logger.getLogger(TheaterForm.class.getName()).log(java.util.logging.Level.SEVERE, null,
//                    ex);
//        } catch (InstantiationException ex) {
//            java.util.logging.Logger.getLogger(TheaterForm.class.getName()).log(java.util.logging.Level.SEVERE, null,
//                    ex);
//        } catch (IllegalAccessException ex) {
//            java.util.logging.Logger.getLogger(TheaterForm.class.getName()).log(java.util.logging.Level.SEVERE, null,
//                    ex);
//        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
//            java.util.logging.Logger.getLogger(TheaterForm.class.getName()).log(java.util.logging.Level.SEVERE, null,
//                    ex);
//        }
//        // </editor-fold>
//        // </editor-fold>
//        // </editor-fold>
//        // </editor-fold>
//
//        /* Create and display the form */
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//                new TheaterForm().setVisible(true);
//            }
//        });
//    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnCancel;
    private javax.swing.JButton btnDeleteByID;
    private javax.swing.JButton btnGetDetail;
    private javax.swing.JButton btnHome;
    private javax.swing.JButton btnSave;
    private javax.swing.JToggleButton btnSortByCapacity;
    private javax.swing.JToggleButton btnSortByName;
    private javax.swing.JButton btnTheaterForm;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lbMovieID;
    private javax.swing.JLabel lbMovieID1;
    private javax.swing.JLabel lbMovieID2;
    private javax.swing.JLabel lbMovieName;
    private javax.swing.JTable tbAllTheater;
    private javax.swing.JTextField txtCapacity;
    private javax.swing.JTextField txtTheaterID;
    private javax.swing.JTextField txtTheaterName;
    // End of variables declaration//GEN-END:variables
}
