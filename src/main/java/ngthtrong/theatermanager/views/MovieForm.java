/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package ngthtrong.theatermanager.views;

import java.awt.Color;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

import ngthtrong.theatermanager.controller.HomePageController;
import ngthtrong.theatermanager.controller.MovieController;
import ngthtrong.theatermanager.controller.TheaterController;
import ngthtrong.theatermanager.models.Movie;

/**
 *
 * @author jhiny
 */
public class MovieForm extends javax.swing.JFrame {

    /**
     * Creates new form MovieFrom
     */
    public MovieForm() {
        initComponents();
        this.setLocationRelativeTo(null);
        this.setSize(1000, 630);
        getContentPane().setBackground(Color.getHSBColor(0.2f, 0.05f, 0.95f));

    }

    public void FormLoad() {
        this.setVisible(true);
        CleanTxt();
    }

    public void FormLoad(List<Movie> movies) {
        this.setVisible(true);
        CleanTxt();
        setMovies(movies);
    }

    public void FormClose() {
        this.setVisible(false);
    }

    public void CleanTxt() {
        txtMovieID.setText("");
        txtMovieName.setText("");
        txtDescription.setText("");
        txtMovieID.requestFocus();
        btnSave.setEnabled(false);
        btnSave.setEnabled(false);
        btnAdd.setEnabled(true);
        txtMovieID.setEnabled(true);
        btnDeleteByID.setEnabled(false);
        btnGetDetail.setEnabled(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated
    // <editor-fold defaultstate="collapsed" desc="Generated
    // <editor-fold defaultstate="collapsed" desc="Generated
    // <editor-fold defaultstate="collapsed" desc="Generated
    // <editor-fold defaultstate="collapsed" desc="Generated
    // <editor-fold defaultstate="collapsed" desc="Generated
    // <editor-fold defaultstate="collapsed" desc="Generated
    // <editor-fold defaultstate="collapsed" desc="Generated
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnMovieForm = new javax.swing.JButton();
        lbMovieID = new javax.swing.JLabel();
        txtMovieID = new javax.swing.JTextField();
        lbMovieID1 = new javax.swing.JLabel();
        txtMovieName = new javax.swing.JTextField();
        lbMovieDescription = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtDescription = new javax.swing.JTextArea();
        btnAdd = new javax.swing.JButton();
        btnSave = new javax.swing.JButton();
        btnDeleteByID = new javax.swing.JButton();
        btnGetDetail = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        tbAllMovies = new javax.swing.JTable();
        btnCancel = new javax.swing.JButton();
        lbMovieName = new javax.swing.JLabel();
        btnSortByName = new javax.swing.JToggleButton();
        btnNowShowing = new javax.swing.JToggleButton();
        btnComingSoon = new javax.swing.JToggleButton();
        btnGetAll = new javax.swing.JToggleButton();
        btnHome = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        btnMovieForm.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnMovieForm.setText("Movie");
        btnMovieForm.setEnabled(false);
        btnMovieForm.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMovieFormActionPerformed(evt);
            }
        });

        lbMovieID.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        lbMovieID.setText("Movie ID:");

        txtMovieID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtMovieIDActionPerformed(evt);
            }
        });
        txtMovieID.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtMovieIDKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtMovieIDKeyTyped(evt);
            }
        });

        lbMovieID1.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        lbMovieID1.setText("Name:");

        txtMovieName.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtMovieNameKeyTyped(evt);
            }
        });

        lbMovieDescription.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        lbMovieDescription.setText("Description:");

        txtDescription.setColumns(20);
        txtDescription.setLineWrap(true);
        txtDescription.setRows(5);
        txtDescription.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtDescriptionKeyTyped(evt);
            }
        });
        jScrollPane1.setViewportView(txtDescription);

        btnAdd.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnAdd.setText("Add");
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });

        btnSave.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnSave.setText("Save");
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });

        btnDeleteByID.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnDeleteByID.setText("Delete by ID");
        btnDeleteByID.setEnabled(false);
        btnDeleteByID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteByIDActionPerformed(evt);
            }
        });

        btnGetDetail.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnGetDetail.setText("Get Detail by ID");
        btnGetDetail.setEnabled(false);
        btnGetDetail.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGetDetailActionPerformed(evt);
            }
        });

        tbAllMovies.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Movie ID", "Name", "On show", "Comming soon", "Description"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.Boolean.class, java.lang.Boolean.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(tbAllMovies);
        if (tbAllMovies.getColumnModel().getColumnCount() > 0) {
            tbAllMovies.getColumnModel().getColumn(0).setResizable(false);
            tbAllMovies.getColumnModel().getColumn(1).setResizable(false);
            tbAllMovies.getColumnModel().getColumn(2).setResizable(false);
        }

        btnCancel.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnCancel.setText("Cancel");
        btnCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelActionPerformed(evt);
            }
        });

        lbMovieName.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        lbMovieName.setText("List all movies:");

        btnSortByName.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnSortByName.setText("Sort by Name");
        btnSortByName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSortByNameActionPerformed(evt);
            }
        });

        btnNowShowing.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnNowShowing.setText("Now Showing");
        btnNowShowing.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNowShowingActionPerformed(evt);
            }
        });

        btnComingSoon.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnComingSoon.setText("Coming Soon");
        btnComingSoon.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnComingSoonActionPerformed(evt);
            }
        });

        btnGetAll.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnGetAll.setText("All movies");
        btnGetAll.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGetAllActionPerformed(evt);
            }
        });

        btnHome.setBackground(new java.awt.Color(204, 0, 0));
        btnHome.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        btnHome.setForeground(new java.awt.Color(255, 255, 255));
        btnHome.setText("Home");
        btnHome.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHomeActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 280, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(btnSave, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(btnAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(btnCancel, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGap(37, 37, 37)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(btnDeleteByID, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btnGetDetail, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addGroup(layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(txtMovieName, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 187, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(lbMovieDescription)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(lbMovieID)
                                    .addGap(48, 48, 48)
                                    .addComponent(txtMovieID, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addComponent(lbMovieID1)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(btnHome, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(btnMovieForm, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGap(3, 3, 3))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 689, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lbMovieName, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addContainerGap())
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnGetAll)
                        .addGap(18, 18, 18)
                        .addComponent(btnSortByName)
                        .addGap(18, 18, 18)
                        .addComponent(btnNowShowing)
                        .addGap(18, 18, 18)
                        .addComponent(btnComingSoon)
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(lbMovieName, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                        .addComponent(btnMovieForm, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btnHome, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lbMovieID)
                            .addComponent(txtMovieID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(10, 10, 10)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lbMovieID1)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(2, 2, 2)
                                .addComponent(txtMovieName, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(lbMovieDescription)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 240, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnDeleteByID, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnSave, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnGetDetail, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 463, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(btnCancel, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnGetAll, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnSortByName, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnNowShowing, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnComingSoon, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(14, 14, 14))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnHomeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHomeActionPerformed
        // TODO add your handling code here:
        HomePageController backHome = new HomePageController();
        backHome.loadHomePage();
        this.dispose();
    }//GEN-LAST:event_btnHomeActionPerformed

    private void btnMovieFormActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMovieFormActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnMovieFormActionPerformed

    private void btnGetAllActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_btnGetAllActionPerformed
        // TODO add your handling code here:
        if (btnGetAll.isSelected()) {
            btnSortByName.setSelected(false);
            btnNowShowing.setSelected(false);
            btnComingSoon.setSelected(false);
            MovieController control = new MovieController();
            control.setMovieForm(this);
            control.sortMovieById();
            btnGetAll.setSelected(false);
        }

    }// GEN-LAST:event_btnGetAllActionPerformed

    private void txtMovieNameKeyTyped(java.awt.event.KeyEvent evt) {// GEN-FIRST:event_txtMovieNameKeyTyped
        // TODO add your handling code here:
        if (txtMovieName.getText().length() >= 80) {
            evt.consume();
        }
    }// GEN-LAST:event_txtMovieNameKeyTyped

    private void txtDescriptionKeyTyped(java.awt.event.KeyEvent evt) {// GEN-FIRST:event_txtDescriptionKeyTyped
        // TODO add your handling code here:
        if (txtDescription.getText().length() >= 255) {
            evt.consume();
        }
    }// GEN-LAST:event_txtDescriptionKeyTyped

    private void btnSortByNameActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_btnSortByNameActionPerformed
        DefaultTableModel model = (DefaultTableModel) tbAllMovies.getModel();

        // DefaultTableModel modelAfterSort = new DefaultTableModel();
        // sort model by column name
        for (int i = 0; i < model.getRowCount(); i++) {
            for (int j = i + 1; j < model.getRowCount(); j++) {
                if (btnSortByName.isSelected()) {
                    if (model.getValueAt(i, 1).toString().compareTo(model.getValueAt(j, 1).toString()) > 0) {
                        Object[] temp = new Object[model.getColumnCount()];
                        for (int k = 0; k < model.getColumnCount(); k++) {
                            temp[k] = model.getValueAt(i, k);
                        }
                        for (int k = 0; k < model.getColumnCount(); k++) {
                            model.setValueAt(model.getValueAt(j, k), i, k);
                        }
                        for (int k = 0; k < model.getColumnCount(); k++) {
                            model.setValueAt(temp[k], j, k);
                        }
                    }
                } else {
                    if (model.getValueAt(i, 0).toString().compareTo(model.getValueAt(j, 0).toString()) > 0) {
                        Object[] temp = new Object[model.getColumnCount()];
                        for (int k = 0; k < model.getColumnCount(); k++) {
                            temp[k] = model.getValueAt(i, k);
                        }
                        for (int k = 0; k < model.getColumnCount(); k++) {
                            model.setValueAt(model.getValueAt(j, k), i, k);
                        }
                        for (int k = 0; k < model.getColumnCount(); k++) {
                            model.setValueAt(temp[k], j, k);
                        }
                    }
                }
            }
        }
        tbAllMovies.setModel(model);
        tbAllMovies.getColumnModel().getColumn(2).setCellRenderer(tbAllMovies.getDefaultRenderer(Boolean.class));
        tbAllMovies.getColumnModel().getColumn(3).setCellRenderer(tbAllMovies.getDefaultRenderer(Boolean.class));
    }// GEN-LAST:event_btnSortByNameActionPerformed

    private void btnNowShowingActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_btnNowShowingActionPerformed
        if (btnNowShowing.isSelected()) {
            btnComingSoon.setSelected(false);
            btnSortByName.setSelected(false);
            MovieController control = new MovieController();
            control.setMovieForm(this);
            control.filterMovieOnShowing();
        } else {
            MovieController control = new MovieController();
            control.setMovieForm(this);
            control.sortMovieById();
        }
    }// GEN-LAST:event_btnNowShowingActionPerformed

    private void btnComingSoonActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_btnComingSoonActionPerformed
        btnAdd.setEnabled(true);
        if (btnComingSoon.isSelected()) {
            btnNowShowing.setSelected(false);
            btnSortByName.setSelected(false);
            MovieController control = new MovieController();
            control.setMovieForm(this);
            control.filterMovieComingSoon();
        } else {
            MovieController control = new MovieController();
            control.setMovieForm(this);
            control.sortMovieById();
        }
    }// GEN-LAST:event_btnComingSoonActionPerformed

    private void txtMovieIDKeyTyped(java.awt.event.KeyEvent evt) {// GEN-FIRST:event_txtMovieIDKeyTyped
        char c = evt.getKeyChar();
        if (!Character.isDigit(c)) {
            evt.consume();
        }
    }// GEN-LAST:event_txtMovieIDKeyTyped

    private void txtMovieIDActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_txtMovieIDActionPerformed
        // TODO add your handling code here:
    }// GEN-LAST:event_txtMovieIDActionPerformed

    private void btnCancelActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_btnCancelActionPerformed
        // TODO add your handling code here:
        CleanTxt();
    }// GEN-LAST:event_btnCancelActionPerformed

    private void btnGetDetailActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_btnGetDetailActionPerformed
        // TODO add your handling code here:

        MovieController control = new MovieController();
        control.setMovieForm(this);
        control.openMovieDetail(Integer.valueOf(txtMovieID.getText()));
    }// GEN-LAST:event_btnGetDetailActionPerformed

    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_btnAddActionPerformed
        // TODO add your handling code here:

        btnSave.setEnabled(true);
        txtMovieID.setText("");
        txtMovieID.setEnabled(false);
        txtMovieName.requestFocus();
        btnAdd.setEnabled(false);
        btnDeleteByID.setEnabled(false);
        btnGetDetail.setEnabled(false);
    }// GEN-LAST:event_btnAddActionPerformed

    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_btnSaveActionPerformed
        // TODO add your handling code here:
        if (txtMovieName.getText().equals("") || txtDescription.getText().equals("")) {
            JOptionPane.showMessageDialog(this, "Please fill all fields!");
        } else {
            Movie movie = new Movie();
            movie.setMovie_name(txtMovieName.getText());
            movie.setDescription(txtDescription.getText());
            movie.setOnShowing(false);
            movie.setCommingSoon(true);
            MovieController control = new MovieController();
            control.setMovieForm(this);
            control.addMovieToDB(movie);
        }
        CleanTxt();

    }// GEN-LAST:event_btnSaveActionPerformed

    private void btnDeleteByIDActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_btnDeleteByIDActionPerformed
        // TODO add your handling code here:
        String[] options = { "Cancel", "Delete" };
        var selected = JOptionPane.showOptionDialog(this,
                "You sure to delete this movie with id = " + txtMovieID.getText() + "!",
                "Status add new user", JOptionPane.DEFAULT_OPTION, JOptionPane.INFORMATION_MESSAGE, null, options,
                options[0]);
        if (selected == 0) {
            return;
        }
        int id = Integer.valueOf(txtMovieID.getText());
        MovieController control = new MovieController();
        control.setMovieForm(this);
        control.deleteMovieInDB(id);
        CleanTxt();

    }// GEN-LAST:event_btnDeleteByIDActionPerformed

    private void txtMovieIDKeyReleased(java.awt.event.KeyEvent evt) {// GEN-FIRST:event_txtMovieIDKeyReleased
        // TODO add your handling code here:
        if (txtMovieID.getText().equals("")) {
            btnDeleteByID.setEnabled(false);
            btnGetDetail.setEnabled(false);
        } else {
            btnDeleteByID.setEnabled(true);
            btnGetDetail.setEnabled(true);
        }
    }// GEN-LAST:event_txtMovieIDKeyReleased

    public void setMovies(List<Movie> Movies) {
        DefaultTableModel model = new DefaultTableModel();
        model.addColumn("Movie ID");
        model.addColumn("Name");
        model.addColumn("On show");
        model.addColumn("Comming soon");
        model.addColumn("Description");
        for (Movie movie : Movies) {
            model.addRow(new Object[] {
                    String.valueOf(movie.getMovie_id()),
                    movie.getMovie_name(),
                    movie.isOnShowing(),
                    movie.isCommingSoon(),
                    movie.getDescription() });
        }
        tbAllMovies.setModel(model);
        tbAllMovies.getColumnModel().getColumn(2).setCellRenderer(tbAllMovies.getDefaultRenderer(Boolean.class));
        tbAllMovies.getColumnModel().getColumn(3).setCellRenderer(tbAllMovies.getDefaultRenderer(Boolean.class));
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnCancel;
    private javax.swing.JToggleButton btnComingSoon;
    private javax.swing.JButton btnDeleteByID;
    private javax.swing.JToggleButton btnGetAll;
    private javax.swing.JButton btnGetDetail;
    private javax.swing.JButton btnHome;
    private javax.swing.JButton btnMovieForm;
    private javax.swing.JToggleButton btnNowShowing;
    private javax.swing.JButton btnSave;
    private javax.swing.JToggleButton btnSortByName;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lbMovieDescription;
    private javax.swing.JLabel lbMovieID;
    private javax.swing.JLabel lbMovieID1;
    private javax.swing.JLabel lbMovieName;
    private javax.swing.JTable tbAllMovies;
    private javax.swing.JTextArea txtDescription;
    private javax.swing.JTextField txtMovieID;
    private javax.swing.JTextField txtMovieName;
    // End of variables declaration//GEN-END:variables
}
